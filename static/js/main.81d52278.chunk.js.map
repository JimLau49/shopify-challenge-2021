{"version":3,"sources":["components/like-button.tsx","components/event-tile.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LikeButton","liked","onClick","className","role","EventTile","title","date","explaination","imageUrl","mediaType","useState","setLiked","width","height","src","frameBorder","allow","allowFullScreen","alt","App","data","setData","useEffect","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","start_date","moment","subtract","format","axios","get","then","res","eventTiles","map","object","index","explanation","url","media_type","reverse","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRA4BeA,EApBW,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,MAA+C,IAAxCC,eAAwC,MAA9B,iBAAO,IAAuB,EAC1E,OACE,mCACGD,EACC,wBAAQE,UAAU,QAAQ,eAAa,OAAOD,QAASA,EAAvD,SACE,sBAAME,KAAK,MAAM,aAAW,kBAA5B,4BAKF,wBAAQD,UAAU,OAAO,eAAa,QAAQD,QAASA,EAAvD,SACE,sBAAME,KAAK,MAAM,aAAW,QAA5B,+BCNGC,EAAY,SAAC,GAMF,IALtBC,EAKqB,EALrBA,MACAC,EAIqB,EAJrBA,KACAC,EAGqB,EAHrBA,aACAC,EAEqB,EAFrBA,SACAC,EACqB,EADrBA,UAEA,EAA0BC,oBAAS,GAAnC,mBAAOV,EAAP,KAAcW,EAAd,KAMA,OACE,sBAAKT,UAAU,wBAAf,UACE,sBAAKA,UAAU,8BAAf,UACE,sBAAMA,UAAU,oBAAhB,0BACA,sBAAMA,UAAU,uBAAhB,mDAIF,sBAAKA,UAAU,mBAAf,UACiB,UAAdO,EACC,wBACEG,MAAM,OACNC,OAAO,MACPC,IAAKN,EACLO,YAAY,IACZC,MAAM,2FACNC,iBAAe,EACfZ,MAAM,aACN,aAAW,iCAGb,qBACEH,UAAU,oBACVY,IAAKN,EACLU,IAAI,cAIR,sBAAKhB,UAAU,0BAAf,UACE,+BAAOG,IACP,sBAAMH,UAAU,mBAAhB,SAAoCI,OAEtC,mBAAGJ,UAAU,+BAAb,SAA6CK,IAC7C,qBAAKL,UAAU,6BAAf,SACE,cAAC,EAAD,CAAYF,MAAOA,EAAOC,QAtCd,WAClBU,GAAUX,e,iDC+BCmB,EA9CI,WACjB,MAAwBT,mBAAgB,IAAxC,mBAAOU,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACRC,YAAM,sCAAuC,CAC3CC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,OAIlBN,qBAAU,WACR,IAAMO,EAAaC,MAASC,SAAS,GAAI,QAAQC,OAAO,aACxDC,IACGC,IADH,0GAEuGL,IAEpGM,MAAK,SAACC,GACLf,EAAQe,EAAIhB,WAEf,IAEH,IAAMiB,EAAajB,EAChBkB,KAAI,SAACC,EAAQC,GAAT,OACH,cAAC,EAAD,CAEEnC,MAAOkC,EAAOlC,MACdC,KAAMiC,EAAOjC,KACbC,aAAcgC,EAAOE,YACrBjC,SAAU+B,EAAOG,IACjBjC,UAAW8B,EAAOI,YANpB,oBACoBH,OAQrBI,UAEH,OACE,qBAAK1C,UAAU,MAAf,SACE,qBAAKA,UAAU,kBAAf,SACGmC,GAAcA,EAAWQ,OAAS,EAAIR,EAAa,cAAC,IAAD,SClC7CS,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.81d52278.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport \"./like-button.scss\";\r\n\r\nexport interface ILikeButton {\r\n  liked: boolean;\r\n  onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n}\r\n\r\nexport const LikeButton = ({ liked, onClick = () => ({}) }: ILikeButton) => {\r\n  return (\r\n    <>\r\n      {liked ? (\r\n        <button className=\"liked\" aria-pressed=\"true\" onClick={onClick}>\r\n          <span role=\"img\" aria-label=\"sparkling heart\">\r\n            üíñ\r\n          </span>\r\n        </button>\r\n      ) : (\r\n        <button className=\"like\" aria-pressed=\"false\" onClick={onClick}>\r\n          <span role=\"img\" aria-label=\"heart\">\r\n            ‚ù§Ô∏è\r\n          </span>\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LikeButton;\r\n","import { useState } from \"react\";\r\nimport \"./event-tile.scss\";\r\nimport LikeButton from \"./like-button\";\r\n\r\nexport interface IEventTileProps {\r\n  key: string;\r\n  title: string;\r\n  date: string;\r\n  explaination: string;\r\n  imageUrl: string;\r\n  mediaType: \"image\" | \"video\";\r\n}\r\n\r\nexport const EventTile = ({\r\n  title,\r\n  date,\r\n  explaination,\r\n  imageUrl,\r\n  mediaType,\r\n}: IEventTileProps) => {\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setLiked(!liked);\r\n  };\r\n\r\n  return (\r\n    <div className=\"event-tile__container\">\r\n      <div className=\"event-tile__title-container\">\r\n        <span className=\"event-tile__title\">Spacestagram</span>\r\n        <span className=\"event-tile__subtitle\">\r\n          Brought to you by NASA&apos;s image API\r\n        </span>\r\n      </div>\r\n      <div className=\"event-tile__info\">\r\n        {mediaType === \"video\" ? (\r\n          <iframe\r\n            width=\"100%\"\r\n            height=\"480\"\r\n            src={imageUrl}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n            title=\"Apod Video\"\r\n            aria-label=\"Embeded Youtube Video Player\"\r\n          />\r\n        ) : (\r\n          <img\r\n            className=\"event-tile__image\"\r\n            src={imageUrl}\r\n            alt=\"NASA Apod\"\r\n          ></img>\r\n        )}\r\n\r\n        <div className=\"event-tile__event-title\">\r\n          <span>{title}</span>\r\n          <span className=\"event-tile__date\">{date}</span>\r\n        </div>\r\n        <p className=\"event-tile__description-text\">{explaination}</p>\r\n        <div className=\"event-tile__like-container\">\r\n          <LikeButton liked={liked} onClick={handleClick} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventTile;\r\n","import \"./App.css\";\r\nimport \"./components/event-tile\";\r\nimport { EventTile, IEventTileProps } from \"./components/event-tile\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nexport const App = () => {\r\n  const [data, setData] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    toast(\"Collecting Images from Satellite...\", {\r\n      position: \"top-right\",\r\n      autoClose: 10000,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n    });\r\n  });\r\n\r\n  useEffect(() => {\r\n    const start_date = moment().subtract(30, \"days\").format(\"YYYY-MM-D\");\r\n    axios\r\n      .get(\r\n        `https://api.nasa.gov/planetary/apod?api_key=zUeHUtgPEYyhRZBf8fCa6w5htRYrZwoWlqFXPZV6&start_date=${start_date}`\r\n      )\r\n      .then((res) => {\r\n        setData(res.data) as unknown as IEventTileProps;\r\n      });\r\n  }, []);\r\n\r\n  const eventTiles = data\r\n    .map((object, index) => (\r\n      <EventTile\r\n        key={`eventTile-${index}`}\r\n        title={object.title}\r\n        date={object.date}\r\n        explaination={object.explanation}\r\n        imageUrl={object.url}\r\n        mediaType={object.media_type}\r\n      />\r\n    ))\r\n    .reverse();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"event-tile-list\">\r\n        {eventTiles && eventTiles.length > 0 ? eventTiles : <ToastContainer />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}